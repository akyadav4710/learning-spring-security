8️⃣ AuthController
java
Copy
Edit
// AuthController.java
@RestController
@RequestMapping("/auth")
public class AuthController {
    @Autowired private AuthenticationManager authManager;
    @Autowired private CustomUserDetailsService uds;
    @Autowired private UserRepository repo;
    @Autowired private PasswordEncoder encoder;

    @PostMapping("/register")
    public String register(@RequestBody RegisterRequest request) {
        if (repo.findByUsername(request.getUsername()).isPresent()) {
            throw new RuntimeException("User already exists");
        }
        User user = new User();
        user.setUsername(request.getUsername());
        user.setPassword(encoder.encode(request.getPassword()));
        user.setRole(request.getRole().toUpperCase());
        repo.save(user);
        return "User registered successfully!";
    }

    @PostMapping("/login")
    public String login(@RequestParam String username, @RequestParam String password) {
        authManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));
        UserDetails user = uds.loadUserByUsername(username);
        String role = user.getAuthorities().iterator().next().getAuthority().replace("ROLE_", "");
        return JwtUtil.generate(username, role);
    }
}